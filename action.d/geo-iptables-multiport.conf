# Fail2Ban configuration file
#
# Author: Cyril Jaquier
# Modified by Yaroslav Halchenko for multiport banning
# $Revision$
#

[INCLUDES]

before = iptables-common.conf

[Definition]

# Option:  actionstart
# Notes.:  command executed once at the start of Fail2Ban.
# Values:  CMD
#
actionstart = <iptables> -N f2b-<name>
              <iptables> -A f2b-<name> -j RETURN
              <iptables> -I <chain> -p <protocol> -m multiport --dports <port> -j f2b-<name>

# Option:  actionstop
# Notes.:  command executed once at the end of Fail2Ban
# Values:  CMD
#
actionstop = <iptables> -D <chain> -p <protocol> -m multiport --dports <port> -j f2b-<name>
             <iptables> -F f2b-<name>
             <iptables> -X f2b-<name>

# Option:  actioncheck
# Notes.:  command executed once before each actionban command
# Values:  CMD
#
actioncheck =   <iptables> -n -L <chain> | grep -q f2b-<name>

# Option:  actionban
# Notes.:  command executed when banning an IP. Take care that the
#          command is executed with Fail2Ban user rights.
# Tags:    <ip>  IP address
#          <failures>  number of failures
#          <time>  unix timestamp of the ban time
# Values:  CMD
#

actionban =
            geo="$(/usr/bin/geoiplookup <ip>)"
            /bin/echo ${geo} | /bin/egrep ": [A-Z]+," && {
                geo="$(/bin/echo ${geo} | /bin/sed 's/^.*: ([A-Z]+),.*$/\1/g' -r)"
            } || {
                geo="$(/usr/bin/whois $ip 2>/dev/null| /usr/bin/awk '/^country:/{print $NF}')"
                if [ "${geo}" = "" ]; then
                    geo="UNKNOWN"
                fi
            }
            egrep_flag=""
            if [ "<match>" = "DROP" ]; then
                egrep_flag="-v"
            fi
            /bin/echo ${geo} | /bin/egrep ${egrep_flag} "^<geopattern>$" && {
                r="ACCEPT"
            } || {
                r="DROP"
            }
            <iptables> -I f2b-<name> 1 -s <ip> -j ${r}
            d=$(/bin/date +"%%Y-%%m-%%d %%H:%%M:%%S,%%N")
            d=$(/bin/echo ${d} | /bin/sed -r 's/.{6}$//g')
            printf "%%s fail2ban.actions: WARNING [<name>] Ban \"<iptables> -I f2b-<name> 1 -s %%15s -j %%-6s\" #(${geo})\n" "${d}" "<ip>" "${r}" >> /var/log/fail2ban.log



# Option:  actionunban
# Notes.:  command executed when unbanning an IP. Take care that the
#          command is executed with Fail2Ban user rights.
# Tags:    <ip>  IP address
#          <failures>  number of failures
#          <time>  unix timestamp of the ban time
# Values:  CMD
#
actionunban =
            geo="$(/usr/bin/geoiplookup <ip>)"
            egrep_flag=""
            if [ "<match>" = "DROP" ]; then
                egrep_flag="-v"
            fi
            /bin/echo ${geo} | /bin/egrep ": [A-Z]+," && {
                geo=$(/bin/echo ${geo} | /bin/sed 's/^.*: ([A-Z]+),.*$/\1/g' -r)
            } || {
                geo="UNKNOWN"
            }
            /bin/echo ${geo} | /bin/egrep ${egrep_flag} "^<geopattern>$" && {
                r="ACCEPT"
            } || {
                r="DROP"
            }
            <iptables> -D f2b-<name> -s <ip> -j ${r}
            d=$(/bin/date +"%%Y-%%m-%%d %%H:%%M:%%S,%%N")
            d=$(/bin/echo ${d} | /bin/sed -r 's/.{6}$//g')
            printf "%%s fail2ban.actions: WARNING [<name>] Unban \"<iptables> -D f2b-<name>    -s %%15s -j %%-6s\" #(${geo})\n" "${d}" "<ip>" "${r}" >> /var/log/fail2ban.log


[Init]

# Defaut name of the chain
#
name = default

# Option:  port
# Notes.:  specifies port to monitor
# Values:  [ NUM | STRING ]  Default:
#
port = ssh

# Option:  protocol
# Notes.:  internally used by config reader for interpolations.
# Values:  [ tcp | udp | icmp | all ] Default: tcp
#
protocol = tcp

# Option:  chain
# Notes    specifies the iptables chain to which the fail2ban rules should be
#          added
# Values:  STRING  Default: INPUT
chain = INPUT


match = "ACCEPT"
